package components

import "github.com/helmutkemper/webassembly/browser/html"

// Button
//
// English:
//
//	 Component width label and button
//
//	Public methods
//	  * Value(string)
//
//	Methods for internal use, should not be used by you and should not be shadowed (rewritten)
//	  * OnChangeNumber
//	  * OnChangeRange
//
//	     Example:
//
//	     +- panel --------------------------------------------------------+
//	     |                                                                |
//	     |  +- panelCel -----------------------------------------------+  |
//	     |  |                                                          |  |
//	     |  | +- labelCel -------------------------------------------+ |  |
//	     |  | | Label                                              Ë‡ | |  |
//	     |  | +- compCel --------------------------------------------+ |  |
//	     |  | | Text inside component            [####  Value  ####] | |  |
//	     |  | +------------------------------------------------------+ |  |
//	     |  |                                                          |  |
//	     |  +----------------------------------------------------------+  |
//	     |                                                                |
//	     +----------------------------------------------------------------+
//
//	    // ColorRange Component type Range
//	    type ColorRange struct {
//	      // Mount the component
//	      components.Range
//
//	      // Field with the value of the element must be type int64 or float64
//	      Color       float64              `wasmPanel:"type:value;min:0;max:50;step:1;default:0"`
//	      // [optional] Reference to the range component
//	      TagRange    *html.TagInputRange  `wasmPanel:"type:inputTagRange"`
//	      // [optional] Reference to the number component
//	      TagNumber   *html.TagInputNumber `wasmPanel:"type:inputTagNumber"`
//	      // [optional] Event pointer. Create one for each event, change, click, etc.
//	      ColorChange *OnChangeEvent       `wasmPanel:"type:listener;event:change;func:OnChange"`
//	    }
//
//	    // Init is invoked when the component is initialized
//	    func (e *ColorRange) Init() { // [optional]
//	      // anything you want
//
//	      // you can change the default properties
//	      e.Step(1)
//	      e.Max(255)
//	      e.Min(0)
//	      e.Value(0)
//	    }
//
//	    // OnChangeEvent Component data capture object. The values are isTrusted, min, max, step and value
//	    type OnChangeEvent struct {
//
//	      // Indicates that the value was generated by the user and not by another method
//	      IsTrusted bool    `wasmGet:"isTrusted"`
//	      // Returns the value of the component
//	      Value     float64 `wasmGet:"value"`
//	    }
//
//	    // OnChange is the function determined by the tag `wasmPanel:"type:listener;event:change;func:OnChange"`.
//	    // `func:OnChange` determines the name of the public function to be invoked in the event
//	    func (e *OnChangeEvent) OnChange(event OnChangeEvent) {
//	      log.Printf("Trusted: %+v", event.IsTrusted)
//	      log.Printf("Value:   %+v", event.Value)
//	    }
type Button struct {
	__value     any
	__label     any
	__buttonTag *html.TagInputButton `wasmPanel:"type:inputTagButton"`
}

func (e *Button) init() {
	if e.__value != nil {
		e.value(e.__value)
		e.__value = nil
	}
}

func (e *Button) value(value any) {
	e.__buttonTag.Value(value)
}

// Value Sets the value of the component.
func (e *Button) Value(value any) {
	if e.__buttonTag == nil {
		e.__value = value
		return
	}

	e.value(value)
}
