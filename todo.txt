https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute#animation_attributes

https://github.com/tetratelabs/wazero

https://developer.mozilla.org/en-US/docs/Web/API
https://developer.mozilla.org/en-US/docs/Web/API/Document

fazer o exemplo https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/pointer-events

fazer o exemplo https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/restart

fazer o exemplo2 https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/visibility

https://developer.mozilla.org/en-US/docs/Web/CSS/blend-mode


https://www.w3.org/TR/DOM-Level-3-Events/#event-flow



todo: path deve deixar de ser nativo e passar a ser código do framework? - inicio
https://javascript.info/bezier-curve

https://javascript.info/

https://blog.maximeheckel.com/posts/cubic-bezier-from-math-to-motion/
todo: path deve deixar de ser nativo e passar a ser código do framework? - fim

// promise - inicio
func main() {
    c := make(chan struct{})

    js.Global().Set("doSomething", js.FuncOf(func(this js.Value, args []js.Value) interface{} {
        handler := js.FuncOf(func(this js.Value, args []js.Value) interface{} {
            resolve := args[0]
            reject := args[1]

            go func() {
                data, err := doSomeWork()
                if err != nil {
                    // err should be an instance of `error`, eg `errors.New("some error")`
                    errorConstructor := js.Global().Get("Error")
                    errorObject := errorConstructor.New(err.Error())
                    reject.Invoke(errorObject)
                } else {
                    resolve.Invoke(js.ValueOf(data))
                }
            }()

            return nil
        })

        promiseConstructor := js.Global().Get("Promise")
        return promiseConstructor.New(handler)
    })

    <-c
}
// promise - fim


desempenho - inicio
FPS: 120
begin: 0 seconds
repeat: 1.0004119873046875 seconds
repeat: 2.0003719329833984 seconds
end: 3.0003321170806885 seconds
-------------------
FPS: 120
begin: 0 seconds
repeat: 1.016626000404358 seconds
repeat: 2.0165860652923584 seconds
end: 3.0165460109710693 seconds
desempenho - fim

dimiantoni

https://withblue.ink/2020/10/03/go-webassembly-http-requests-and-promises.html


https://products.aspose.app/barcode/pt/recognize/qr#/recognized
https://www.qrcodefacil.com/

https://developer.mozilla.org/en-US/docs/Web/CSS/Reference#index

https://codepen.io/nikhil8krishnan/pen/rVoXJa
https://codepen.io/nikhil8krishnan/pen/dMEzGx
https://codepen.io/nikhil8krishnan/pens/popular

https://www.jetbrains.com/community/opensource/#support



https://www.spritefusion.com/
